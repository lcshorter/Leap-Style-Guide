WRMCB=function(e){var c=console;if(c&&c.log&&c.error){c.log('Error running batched script.');c.error(e);}}
;
try {
/* module-key = 'com.atlassian.confluence.plugins.drag-and-drop:filestore-uploader', location = 'js/filestore-uploader.js' */
define("confluence-drag-and-drop/filestore-uploader",["jquery","underscore","confluence-drag-and-drop/drag-and-drop-utils","confluence/meta","confluence/api/constants"],function(g,i,o,j,k){function l(){var a={},b=parseInt(j.get("page-id"),10);b?a.pageId=b:a.draftId=parseInt(j.get("draft-id"),10);if(b=j.get("drag-and-drop-entity-id"))a.dragAndDropEntityId=b;return a}function m(a){return{generalError:{message:"Error connecting to server",fileIds:a}}}function n(a,b){try{var c=JSON.parse(a.responseText);
if(c.fileErrors&&c.fileErrors.length)return h(c);if(c.error)return{generalError:{message:c.error,fileIds:b}}}catch(f){return m(b)}}function h(a){var b=[];a.fileErrors&&a.fileErrors.length&&i.each(a.fileErrors,function(a){b.push({id:a.clientFileId,message:a.errorMessage})});return{fileErrors:b}}function d(){}d.prototype.filesAdded=function(a,b,c){var f=g.Deferred();if(!b)return f.resolve({}).promise();for(var e=[],a=0;a<b.length;a++){var d=b[a];d.status!==plupload.FAILED&&e.push(d)}if(0===e.length)return f.resolve({}).promise();
b=l();b.files=i.map(e,function(a){return{name:a.name,clientFileId:a.id,size:a.size}});g.ajax({type:"POST",url:k.CONTEXT_PATH+"/rest/drag-and-drop/1/filestore/upload/validate",data:g.toJSON(b),contentType:"application/json"}).done(function(a){c.uploadToken=a.token;c.clientId=a.clientId;c.fileStoreUrl=a.fileStoreUrl;f.resolve(h(a))}).fail(function(a){f.resolve(n(a,i.map(e,function(a){return a.id})))});return f.promise()};d.prototype.beforeUpload=function(a,b,c){a.settings.url=plupload.buildUrl(c.fileStoreUrl+
"/file/binary",{token:c.uploadToken,client:c.clientId})};d.prototype.fileUploaded=function(a,b,c,f){var e=g.Deferred();if(c.response){var a=JSON.parse(c.response).data,c=b.name.substr(b.name.lastIndexOf(".")+1),d=a.id,h=l();i.extend(h,{fileStoreId:d,fileName:a.name,mimeType:plupload.mimeTypes[c.toLowerCase()]||o.defaultMimeType,size:a.size,minorEdit:!0,renderEditorHTML:!!f,contentType:j.get("content-type")});g.ajax({type:"POST",url:k.CONTEXT_PATH+"/rest/drag-and-drop/1/filestore/upload",data:g.toJSON(h),
contentType:"application/json"}).done(function(a){e.resolve({fileId:b.id,fileServerId:a.id,htmlForEditor:a.htmlForEditor})}).fail(function(a){a=n(a,[b.id]);e.reject(a)})}else e.reject(m([b.id]));return e.promise()};d.prototype.serverError=function(a){var b;try{var c=JSON.parse(a).error;c&&(b=c.code)}catch(d){console.debug("Failed to parse server error response")}return b};return d});
}catch(e){WRMCB(e)};