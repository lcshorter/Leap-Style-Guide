@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700");
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain) */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* Basic element and font defaults */
sup,
sub {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/*
 * Addresses Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Corrects inability to style clickable `input` types in iOS.
 * 3. Improves usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled],
input[disabled] {
  cursor: default;
}

/*
 * 1. Addresses box sizing set to `content-box` in IE 8/9.
 * 2. Removes excess padding in IE 8/9.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Addresses `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Addresses `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/*
 * Removes inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
 * Removes inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * Removes the clear field "X" button in IE10+
 */
input::-ms-clear,
input::-ms-reveal {
  display: none;
}

/*
 * 1. Removes default vertical scrollbar in IE 8/9.
 * 2. Improves readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/*
 * Improves readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

/* Font Reset */
body {
  margin: 0;
  font: 13px/1.231 arial,helvetica,clean,sans-serif;
}

select,
input,
button,
textarea {
  font: 99% arial,helvetica,clean,sans-serif;
}

table {
  font-size: inherit;
  font: 100%;
}

pre,
code,
kbd,
samp,
tt {
  font-family: monospace;
  line-height: 100%;
}

@keyframes leap-keyframe-fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 100;
  }
}
@keyframes leap-keyframe-fade-out {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}
/**
 * Sets a drop shadow for the element. The passed value is the "depth" that the component
 * should reside on. The higher the number, the further away from the background it will
 * appear to be. There are three levels of depth:
 * 1 = Slighly higher than the base level; closest to the base
 * 2 = Medium level element
 * 3 = Highest position reserved for floating elements
 * @mixin box-shadow
 * @param {Number} $depth
 */
/**
 * Sets the border-radius property for an element
 * @mixin border-radius
 * @param {Mixed} $radius Radius to set; defaults to half of the grid-size defined
 */
/**
 * Defines the font styling based off of the size passed. Optionally a color can be passed
 * to render the font in a different color than it's inherited value.
 * @mixin font
 * @param {String} $size Font size name to mix in
 * @param {String} $color (Optional) Color to display the text in
 */
/**
 * Creates a cheveron
 * @mixin cheveron
 * @param {Color} $color Cheveron color
 * @param {Size} $size Size of the cheveron
 * @param {String} $direction Direction to display the cheveron; values: right, left, down, up
 */
/**
 * Creates a bullet
 * @mixin bullet
 * @param {Color} $color Cheveron color
 * @param {Size} $size Size of the cheveron
 */
/**
 * Mixes in all of the properties to have a single background image
 * @mixin bg
 * @param {String} $asset 
 * @return {String} 
 */
/**
 * Creates a fill of color and image for the element.
 * @mixin bg
 * @param {String} $asset 
 * @return {String} 
 */
/**
 * Creates a background stripe pattern
 * @mixin stripes
 * @param {Color} $c1 Primary stripe color
 * @param {Color} $c2 Secondary stripe color
 * @param {Size} $size Stripe width
 * @param {Degres} $angle Angule to display the stripes in. Pattern matches up at positive and negative values of: 0, 45, 90, 135 and 190
 */
/**
 * This returns a pixel size that is a factor of the defined grid-size
 * @function grid
 * @param {Number} $factor (Optional) Factor to multiply the grid size by
 * @return {Number} 
 */
/**
 * Returns an asset path with $leap-asset-root as it's base directory
 * @function asset
 * @param {String} $asset 
 * @return {String} 
 */
html,
body {
  height: 100%;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-family: "Open Sans", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.breakpoint {
  max-width: 1296px;
  padding: 0 80px;
  margin: 0 auto;
}

.leap-text-2x-small {
  font-weight: 400;
  font-size: 10px;
  line-height: 16px;
}

.leap-text-2x-small-caps {
  font-weight: 600;
  font-size: 10px;
  line-height: 16px;
  text-transform: uppercase;
}

.leap-text-1x-small {
  font-weight: 400;
  font-size: 12px;
  line-height: 16px;
}

.leap-text-1x-small-caps {
  font-weight: 600;
  font-size: 12px;
  line-height: 16px;
  text-transform: uppercase;
}

.leap-text-small {
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
}

.leap-text-medium {
  font-weight: 400;
  font-size: 16px;
  line-height: 24px;
}

.leap-text-medium-caps {
  font-weight: 600;
  font-size: 16px;
  line-height: 24px;
  text-transform: uppercase;
}

.leap-text-large {
  font-weight: 300;
  font-size: 20px;
  line-height: 24px;
}

.leap-text-1x-large {
  font-weight: 300;
  font-size: 24px;
  line-height: 32px;
}

.leap-text-2x-large {
  font-weight: 300;
  font-size: 32px;
  line-height: 40px;
}

.leap-text-3x-large {
  font-weight: 300;
  font-size: 40px;
  line-height: 48px;
}

@media only screen and (max-width: 1296px) {
  .breakpoint {
    margin: 0 80px;
    padding: 0;
  }
}
@media only screen and (max-width: 416px) {
  .breakpoint {
    margin: 0;
  }
}
